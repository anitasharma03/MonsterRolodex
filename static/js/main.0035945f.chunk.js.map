{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","_jsxs","className","children","_jsx","alt","src","concat","monster","id","name","email","CardList","monsters","map","SearchBox","_ref","placeholder","onSearchChange","type","onChange","App","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","e","setState","searchField","target","value","state","_createClass","key","_this2","fetch","then","response","json","users","_this$state","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUAIaA,EAAO,SAACC,GAAK,OACxBC,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OACEC,IAAI,UACJC,IAAG,wBAAAC,OAA0BP,EAAMQ,QAAQC,GAAE,4BAE/CL,cAAA,MAAAD,SAAKH,EAAMQ,QAAQE,OACnBN,cAAA,KAAAD,SAAIH,EAAMQ,QAAQG,UACd,ECNKC,G,MAAW,SAACZ,GAAK,OAC5BI,cAAA,OAAKF,UAAU,YAAWC,SACvBH,EAAMa,SAASC,KAAI,SAACN,GAAO,OAC1BJ,cAACL,EAAI,CAAkBS,QAASA,GAArBA,EAAQC,GAAwB,KAEzC,GCPKM,G,MAAY,SAAHC,GAAA,IAAMC,EAAWD,EAAXC,YAAaC,EAAcF,EAAdE,eAAc,OACrDd,cAAA,SACEF,UAAU,SACViB,KAAK,SACLF,YAAaA,EACbG,SAAUF,GACV,GCmCWG,EApCN,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GACP,SAAAA,IAAe,IAADK,EAMV,OANUC,YAAA,KAAAN,IACZK,EAAAF,EAAAI,KAAA,OAYFV,eAAiB,SAACW,GAChBH,EAAKI,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,OACxC,EAZEP,EAAKQ,MAAQ,CACXrB,SAAU,GACVkB,YAAa,IACbL,CACJ,CAyBC,OAzBAS,YAAAd,EAAA,EAAAe,IAAA,oBAAAH,MACD,WAAqB,IAADI,EAAA,KAClBC,MAAM,8CACHC,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACG,GAAK,OAAKL,EAAKP,SAAS,CAAEjB,SAAU6B,GAAQ,GACvD,GAAC,CAAAN,IAAA,SAAAH,MAKD,WACE,IAAAU,EAAkCC,KAAKV,MAA/BrB,EAAQ8B,EAAR9B,SAAUkB,EAAWY,EAAXZ,YACZc,EAAmBhC,EAASiC,QAAO,SAACtC,GAAO,OAC/CA,EAAQE,KAAKqC,cAAcC,SAASjB,EAAYgB,cAAc,IAEhE,OACE9C,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAAA,MAAAD,SAAI,qBACJC,cAACW,EAAS,CACRE,YAAY,qBACZC,eAAgB0B,KAAK1B,iBAEvBd,cAACQ,EAAQ,CAACC,SAAUgC,MAG1B,KAACxB,CAAA,CAjCM,CAAS4B,IAAMC,WCGTC,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAsBd,MAAK,SAAAvB,GAAkD,IAA/CsC,EAAMtC,EAANsC,OAAQC,EAAMvC,EAANuC,OAAQC,EAAMxC,EAANwC,OAAQC,EAAMzC,EAANyC,OAAQC,EAAO1C,EAAP0C,QAC1DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACZ,GAER,ECJAO,IAASC,OACPxD,cAAC6C,IAAMY,WAAU,CAAA1D,SACfC,cAACiB,EAAG,MAENyC,SAASC,eAAe,SAM1BZ,G","file":"static/js/main.0035945f.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./card.styles.css\";\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <img\n      alt=\"monster\"\n      src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n    />\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n  </div>\n);\n","import React from \"react\";\n\nimport { Card } from \"../card/card.component\";\n\nimport \"./card-list.styles.css\";\n\nexport const CardList = (props) => (\n  <div className=\"card-list\">\n    {props.monsters.map((monster) => (\n      <Card key={monster.id} monster={monster} />\n    ))}\n  </div>\n);\n","import React from \"react\";\n\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, onSearchChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={onSearchChange}\n  />\n);\n","import React from \"react\";\nimport \"./App.css\";\n\nimport \"./components/card-list/card-list.component\";\n\nimport { CardList } from \"./components/card-list/card-list.component\";\n\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n  onSearchChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1> Monster Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search for Monster\"\n          onSearchChange={this.onSearchChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import (\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}